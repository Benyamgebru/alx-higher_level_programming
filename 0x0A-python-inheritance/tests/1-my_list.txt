#!/usr/bin/python3
"""Test module for MyList class."""
import unittest
from io import StringIO
from unittest.mock import patch
from my_list import MyList


class TestMyList(unittest.TestCase):
    """Test cases for MyList class."""

    def setUp(self):
        """Set up test fixtures."""
        self.my_list = MyList()

    def test_sorted_print(self):
        """Test sorted print."""
        with patch("sys.stdout", new=StringIO()) as output:
            self.my_list.append(1)
            self.my_list.append(4)
            self.my_list.append(2)
            self.my_list.append(3)
            self.my_list.append(5)
            self.my_list.print_sorted()
            self.assertEqual(output.getvalue(), "[1, 2, 3, 4, 5]\n")

    def test_append(self):
        """Test append method."""
        self.my_list.append(1)
        self.assertEqual(self.my_list, [1])
        self.my_list.append(2)
        self.assertEqual(self.my_list, [1, 2])
        self.my_list.append(3)
        self.assertEqual(self.my_list, [1, 2, 3])

    def test_inheritance(self):
        """Test inheritance from list."""
        self.assertIsInstance(self.my_list, list)


if __name__ == "__main__":
    unittest.main()
